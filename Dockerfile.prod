# Production Dockerfile for DSS Service
# Multi-stage build for optimized image size

FROM clojure:temurin-21-tools-deps-alpine AS builder

WORKDIR /app

# Copy dependency files first (for layer caching)
COPY deps.edn /app/

# Download and cache dependencies
RUN clj -P

# Copy source code
COPY src /app/src

# Precompile namespaces for faster startup
RUN clj -M -e "(compile 'com.audidat.dss-service.core)"

# Final stage - minimal runtime image
FROM clojure:temurin-21-tools-deps-alpine

# Install curl for healthcheck
RUN apk add --no-cache curl && \
    addgroup -g 1000 dss && \
    adduser -D -u 1000 -G dss dss

WORKDIR /app

# Copy dependencies and compiled code from builder
COPY --from=builder /root/.m2 /home/dss/.m2
COPY --from=builder /app /app

# Copy source (needed for runtime)
COPY deps.edn /app/
COPY src /app/src

# Change ownership to non-root user
RUN chown -R dss:dss /app /home/dss

# Switch to non-root user
USER dss

# Expose port
EXPOSE 4000

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:4000/health || exit 1

# Start the service
CMD ["clj", "-M:run"]
